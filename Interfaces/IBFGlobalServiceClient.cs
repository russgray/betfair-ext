using System;
using BetfairExt.BFGlobal;

namespace BetfairExt.Interfaces
{
    public interface IBFGlobalServiceClient
    {
        AddPaymentCardResp addPaymentCard(AddPaymentCardReq request);
        void addPaymentCardAsync(AddPaymentCardReq request);
        void addPaymentCardAsync(AddPaymentCardReq request, object userState);
        event EventHandler<addPaymentCardCompletedEventArgs> addPaymentCardCompleted;
        IAsyncResult BeginaddPaymentCard(AddPaymentCardReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BeginconvertCurrency(ConvertCurrencyReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BegincreateAccount(CreateAccountReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BegindeletePaymentCard(DeletePaymentCardReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BegindepositFromPaymentCard(DepositFromPaymentCardReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BeginforgotPassword(ForgotPasswordReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BegingetActiveEventTypes(GetEventTypesReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BegingetAllCurrencies(GetCurrenciesReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BegingetAllCurrenciesV2(GetCurrenciesV2Req request, AsyncCallback callback, object asyncState);
        IAsyncResult BegingetAllEventTypes(GetEventTypesReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BegingetEvents(GetEventsReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BegingetPaymentCard(GetPaymentCardReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BegingetSubscriptionInfo(GetSubscriptionInfoReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BeginkeepAlive(KeepAliveReq request, AsyncCallback callback, object asyncState);
        IAsyncResult Beginlogin(LoginReq request, AsyncCallback callback, object asyncState);
        IAsyncResult Beginlogout(LogoutReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BeginmodifyPassword(ModifyPasswordReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BeginmodifyProfile(ModifyProfileReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BeginretrieveLIMBMessage(RetrieveLIMBMessageReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BeginselfExclude(SelfExcludeReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BeginsetChatName(SetChatNameReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BeginsubmitLIMBMessage(SubmitLIMBMessageReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BegintransferFunds(TransferFundsReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BeginupdatePaymentCard(UpdatePaymentCardReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BeginviewProfile(ViewProfileReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BeginviewProfileV2(ViewProfileV2Req request, AsyncCallback callback, object asyncState);
        IAsyncResult BeginviewReferAndEarn(ViewReferAndEarnReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BeginwithdrawByBankTransfer(WithdrawByBankTransferReq request, AsyncCallback callback, object asyncState);
        IAsyncResult BeginwithdrawToPaymentCard(WithdrawToPaymentCardReq request, AsyncCallback callback, object asyncState);
        ConvertCurrencyResp convertCurrency(ConvertCurrencyReq request);
        void convertCurrencyAsync(ConvertCurrencyReq request);
        void convertCurrencyAsync(ConvertCurrencyReq request, object userState);
        event EventHandler<convertCurrencyCompletedEventArgs> convertCurrencyCompleted;
        CreateAccountResp createAccount(CreateAccountReq request);
        void createAccountAsync(CreateAccountReq request);
        void createAccountAsync(CreateAccountReq request, object userState);
        event EventHandler<createAccountCompletedEventArgs> createAccountCompleted;
        DeletePaymentCardResp deletePaymentCard(DeletePaymentCardReq request);
        void deletePaymentCardAsync(DeletePaymentCardReq request);
        void deletePaymentCardAsync(DeletePaymentCardReq request, object userState);
        event EventHandler<deletePaymentCardCompletedEventArgs> deletePaymentCardCompleted;
        DepositFromPaymentCardResp depositFromPaymentCard(DepositFromPaymentCardReq request);
        void depositFromPaymentCardAsync(DepositFromPaymentCardReq request);
        void depositFromPaymentCardAsync(DepositFromPaymentCardReq request, object userState);
        event EventHandler<depositFromPaymentCardCompletedEventArgs> depositFromPaymentCardCompleted;
        AddPaymentCardResp EndaddPaymentCard(IAsyncResult result);
        ConvertCurrencyResp EndconvertCurrency(IAsyncResult result);
        CreateAccountResp EndcreateAccount(IAsyncResult result);
        DeletePaymentCardResp EnddeletePaymentCard(IAsyncResult result);
        DepositFromPaymentCardResp EnddepositFromPaymentCard(IAsyncResult result);
        ForgotPasswordResp EndforgotPassword(IAsyncResult result);
        GetEventTypesResp EndgetActiveEventTypes(IAsyncResult result);
        GetCurrenciesResp EndgetAllCurrencies(IAsyncResult result);
        GetCurrenciesV2Resp EndgetAllCurrenciesV2(IAsyncResult result);
        GetEventTypesResp EndgetAllEventTypes(IAsyncResult result);
        GetEventsResp EndgetEvents(IAsyncResult result);
        GetPaymentCardResp EndgetPaymentCard(IAsyncResult result);
        GetSubscriptionInfoResp EndgetSubscriptionInfo(IAsyncResult result);
        KeepAliveResp EndkeepAlive(IAsyncResult result);
        LoginResp Endlogin(IAsyncResult result);
        LogoutResp Endlogout(IAsyncResult result);
        ModifyPasswordResp EndmodifyPassword(IAsyncResult result);
        ModifyProfileResp EndmodifyProfile(IAsyncResult result);
        RetrieveLIMBMessageResp EndretrieveLIMBMessage(IAsyncResult result);
        SelfExcludeResp EndselfExclude(IAsyncResult result);
        SetChatNameResp EndsetChatName(IAsyncResult result);
        SubmitLIMBMessageResp EndsubmitLIMBMessage(IAsyncResult result);
        TransferFundsResp EndtransferFunds(IAsyncResult result);
        UpdatePaymentCardResp EndupdatePaymentCard(IAsyncResult result);
        ViewProfileResp EndviewProfile(IAsyncResult result);
        ViewProfileV2Resp EndviewProfileV2(IAsyncResult result);
        ViewReferAndEarnResp EndviewReferAndEarn(IAsyncResult result);
        WithdrawByBankTransferResp EndwithdrawByBankTransfer(IAsyncResult result);
        WithdrawToPaymentCardResp EndwithdrawToPaymentCard(IAsyncResult result);
        ForgotPasswordResp forgotPassword(ForgotPasswordReq request);
        void forgotPasswordAsync(ForgotPasswordReq request);
        void forgotPasswordAsync(ForgotPasswordReq request, object userState);
        event EventHandler<forgotPasswordCompletedEventArgs> forgotPasswordCompleted;
        GetEventTypesResp getActiveEventTypes(GetEventTypesReq request);
        void getActiveEventTypesAsync(GetEventTypesReq request);
        void getActiveEventTypesAsync(GetEventTypesReq request, object userState);
        event EventHandler<getActiveEventTypesCompletedEventArgs> getActiveEventTypesCompleted;
        GetCurrenciesResp getAllCurrencies(GetCurrenciesReq request);
        void getAllCurrenciesAsync(GetCurrenciesReq request);
        void getAllCurrenciesAsync(GetCurrenciesReq request, object userState);
        event EventHandler<getAllCurrenciesCompletedEventArgs> getAllCurrenciesCompleted;
        GetCurrenciesV2Resp getAllCurrenciesV2(GetCurrenciesV2Req request);
        void getAllCurrenciesV2Async(GetCurrenciesV2Req request);
        void getAllCurrenciesV2Async(GetCurrenciesV2Req request, object userState);
        event EventHandler<getAllCurrenciesV2CompletedEventArgs> getAllCurrenciesV2Completed;
        GetEventTypesResp getAllEventTypes(GetEventTypesReq request);
        void getAllEventTypesAsync(GetEventTypesReq request);
        void getAllEventTypesAsync(GetEventTypesReq request, object userState);
        event EventHandler<getAllEventTypesCompletedEventArgs> getAllEventTypesCompleted;
        GetEventsResp getEvents(GetEventsReq request);
        void getEventsAsync(GetEventsReq request);
        void getEventsAsync(GetEventsReq request, object userState);
        event EventHandler<getEventsCompletedEventArgs> getEventsCompleted;
        GetPaymentCardResp getPaymentCard(GetPaymentCardReq request);
        void getPaymentCardAsync(GetPaymentCardReq request);
        void getPaymentCardAsync(GetPaymentCardReq request, object userState);
        event EventHandler<getPaymentCardCompletedEventArgs> getPaymentCardCompleted;
        GetSubscriptionInfoResp getSubscriptionInfo(GetSubscriptionInfoReq request);
        void getSubscriptionInfoAsync(GetSubscriptionInfoReq request);
        void getSubscriptionInfoAsync(GetSubscriptionInfoReq request, object userState);
        event EventHandler<getSubscriptionInfoCompletedEventArgs> getSubscriptionInfoCompleted;
        KeepAliveResp keepAlive(KeepAliveReq request);
        void keepAliveAsync(KeepAliveReq request);
        void keepAliveAsync(KeepAliveReq request, object userState);
        event EventHandler<keepAliveCompletedEventArgs> keepAliveCompleted;
        LoginResp login(LoginReq request);
        void loginAsync(LoginReq request);
        void loginAsync(LoginReq request, object userState);
        event EventHandler<loginCompletedEventArgs> loginCompleted;
        LogoutResp logout(LogoutReq request);
        void logoutAsync(LogoutReq request);
        void logoutAsync(LogoutReq request, object userState);
        event EventHandler<logoutCompletedEventArgs> logoutCompleted;
        ModifyPasswordResp modifyPassword(ModifyPasswordReq request);
        void modifyPasswordAsync(ModifyPasswordReq request);
        void modifyPasswordAsync(ModifyPasswordReq request, object userState);
        event EventHandler<modifyPasswordCompletedEventArgs> modifyPasswordCompleted;
        ModifyProfileResp modifyProfile(ModifyProfileReq request);
        void modifyProfileAsync(ModifyProfileReq request);
        void modifyProfileAsync(ModifyProfileReq request, object userState);
        event EventHandler<modifyProfileCompletedEventArgs> modifyProfileCompleted;
        RetrieveLIMBMessageResp retrieveLIMBMessage(RetrieveLIMBMessageReq request);
        void retrieveLIMBMessageAsync(RetrieveLIMBMessageReq request);
        void retrieveLIMBMessageAsync(RetrieveLIMBMessageReq request, object userState);
        event EventHandler<retrieveLIMBMessageCompletedEventArgs> retrieveLIMBMessageCompleted;
        SelfExcludeResp selfExclude(SelfExcludeReq request);
        void selfExcludeAsync(SelfExcludeReq request);
        void selfExcludeAsync(SelfExcludeReq request, object userState);
        event EventHandler<selfExcludeCompletedEventArgs> selfExcludeCompleted;
        SetChatNameResp setChatName(SetChatNameReq request);
        void setChatNameAsync(SetChatNameReq request);
        void setChatNameAsync(SetChatNameReq request, object userState);
        event EventHandler<setChatNameCompletedEventArgs> setChatNameCompleted;
        SubmitLIMBMessageResp submitLIMBMessage(SubmitLIMBMessageReq request);
        void submitLIMBMessageAsync(SubmitLIMBMessageReq request);
        void submitLIMBMessageAsync(SubmitLIMBMessageReq request, object userState);
        event EventHandler<submitLIMBMessageCompletedEventArgs> submitLIMBMessageCompleted;
        TransferFundsResp transferFunds(TransferFundsReq request);
        void transferFundsAsync(TransferFundsReq request);
        void transferFundsAsync(TransferFundsReq request, object userState);
        event EventHandler<transferFundsCompletedEventArgs> transferFundsCompleted;
        UpdatePaymentCardResp updatePaymentCard(UpdatePaymentCardReq request);
        void updatePaymentCardAsync(UpdatePaymentCardReq request);
        void updatePaymentCardAsync(UpdatePaymentCardReq request, object userState);
        event EventHandler<updatePaymentCardCompletedEventArgs> updatePaymentCardCompleted;
        ViewProfileResp viewProfile(ViewProfileReq request);
        void viewProfileAsync(ViewProfileReq request);
        void viewProfileAsync(ViewProfileReq request, object userState);
        event EventHandler<viewProfileCompletedEventArgs> viewProfileCompleted;
        ViewProfileV2Resp viewProfileV2(ViewProfileV2Req request);
        void viewProfileV2Async(ViewProfileV2Req request);
        void viewProfileV2Async(ViewProfileV2Req request, object userState);
        event EventHandler<viewProfileV2CompletedEventArgs> viewProfileV2Completed;
        ViewReferAndEarnResp viewReferAndEarn(ViewReferAndEarnReq request);
        void viewReferAndEarnAsync(ViewReferAndEarnReq request);
        void viewReferAndEarnAsync(ViewReferAndEarnReq request, object userState);
        event EventHandler<viewReferAndEarnCompletedEventArgs> viewReferAndEarnCompleted;
        WithdrawByBankTransferResp withdrawByBankTransfer(WithdrawByBankTransferReq request);
        void withdrawByBankTransferAsync(WithdrawByBankTransferReq request);
        void withdrawByBankTransferAsync(WithdrawByBankTransferReq request, object userState);
        event EventHandler<withdrawByBankTransferCompletedEventArgs> withdrawByBankTransferCompleted;
        WithdrawToPaymentCardResp withdrawToPaymentCard(WithdrawToPaymentCardReq request);
        void withdrawToPaymentCardAsync(WithdrawToPaymentCardReq request);
        void withdrawToPaymentCardAsync(WithdrawToPaymentCardReq request, object userState);
        event EventHandler<withdrawToPaymentCardCompletedEventArgs> withdrawToPaymentCardCompleted;
    }
}
